{"version":3,"sources":["helpers/actorInfoRequest.js","types/types.js","actions/actor.js","components/ActorInfo/MoviesInfo.jsx","components/ActorInfo/ActorInfo.jsx","components/UploadImage/UploadImage.jsx","routers/AppRouter.jsx","store/store.js","reducers/actorReducer.js","App.js","index.js"],"names":["actorInfoRequest","img","a","actorNameRequest","actorName","actorDataRequest","profile_path","name","gender","popularity","known_for","error","data","photo","movies","image","form","FormData","append","axios","post","headers","process","Error","message","success","get","params","api_key","language","page","include_adult","query","results","types","setActor","info","type","payload","MoviesInfo","useState","open","isModalVisible","setIsModalVisible","console","log","title","style","styles","vote_average","StarFilled","color","borderRadius","visible","onOk","onCancel","sfontWeight","overview","display","justifyContent","alignItems","flexWrap","map","poster_path","id","preview","width","src","onClick","showModal","padding","margin","boxShadow","ActorInfo","location","useLocation","useSelector","state","actor","actorInfo","queryString","parse","search","q","dispatch","useDispatch","history","useHistory","container","overflow","marginBottom","e","preventDefault","goBack","ArrowLeftOutlined","align","direction","size","xs","sm","md","lg","xl","xxl","avatar","fontSize","height","minHeight","background","Dragger","Upload","UploadImage","props","multiple","action","accept","onChange","status","file","fileType","split","pop","toUpperCase","originFileObj","push","dragger","className","InboxOutlined","text","AppRouter","exact","path","component","to","reducers","combineReducers","store","createStore","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e16ad01.chunk.js","sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nimport { message } from 'antd';\r\n\r\nexport const actorInfoRequest = async (img) => {\r\n  const actorName = typeof(img) === 'string' ? img : await actorNameRequest(img);\r\n\r\n  if (actorName) {\r\n    const { profile_path, name, gender, popularity, known_for } = await actorDataRequest(actorName);\r\n\r\n    return {\r\n      error: \"\",\r\n      data: {\r\n        name,\r\n        popularity,\r\n        photo: profile_path,\r\n        movies: [...known_for],\r\n        gender: gender === 0 ? 'Desconocido' :\r\n          gender === 2 ? 'Hombre' : 'Mujer',\r\n      }\r\n    };\r\n  }\r\n\r\n  return {\r\n    error: \"error\",\r\n    data: \"\"\r\n  }\r\n\r\n}\r\n\r\nconst actorNameRequest = async (image) => {\r\n  const form = new FormData();\r\n  form.append('file', image); // encapsula el archivo\r\n\r\n  //peticion http\r\n  try {\r\n    const { data: { error, actorName } } = await axios.post('https://whois.nomada.cloud/upload', form, {\r\n      headers: {\r\n        'Nomada': process.env.REACT_APP_WhoIs_KEY,\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n\r\n    if (error) throw new Error(error);\r\n    message.success(`Imagen cargada correctamente`);\r\n\r\n    return actorName;\r\n  } catch (error) {\r\n    message.error(`No se reconece la imagen`);\r\n  }\r\n}\r\n\r\n\r\nexport const actorDataRequest = async (name) => {\r\n  try {\r\n    const { data } = await axios.get('https://api.themoviedb.org/3/search/person', {\r\n      params: {\r\n        api_key: process.env.REACT_APP_TheMovieDb_KEY,\r\n        language: 'es-ES',\r\n        page: '1',\r\n        include_adult: 'true',\r\n        query: name\r\n      }\r\n    });\r\n\r\n    return data.results[0];\r\n  } catch (error) {\r\n    message.error('Algo fue mal por favor, intente otra vez');\r\n  }\r\n}","export const types = {\r\n  setActor: '[Actor] set',\r\n  deleteActor: '[Actor] delete',\r\n}","import { types } from '../types/types';\r\n\r\nexport const setActor = (info) => ({\r\n  type: types.setActor,\r\n  payload: {\r\n    ...info\r\n  }\r\n});\r\n\r\nexport const deleteActor = () => ({\r\n  type: types.deleteActor\r\n});","import React, { useState } from 'react';\nimport { Modal, Tooltip, Image } from 'antd';\nimport { StarFilled } from '@ant-design/icons';\n\nexport const MoviesInfo = ({ movies }) => {\n    const [isModalVisible, setIsModalVisible] = useState({ open: false, data: {} });\n    console.log(movies);\n\n    const showModal = (title, overview, vote_average) => {\n        setIsModalVisible({ open: true, data: { title, overview, vote_average } });\n    };\n\n    const handleOk = () => {\n        setIsModalVisible({ open: false, data: {} });\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible({ open: false, data: {} });\n    };\n\n    const title =\n        <div style={styles.title}>\n            <div>\n                {isModalVisible.data.title}\n            </div>\n            <div>\n                {isModalVisible.data.vote_average}\n                <StarFilled style={{ color: 'gold' }} />/10\n            </div>\n        </div>;\n\n    return (\n        <>\n            <Modal\n                style={{ borderRadius: '10px' }}\n                title={title}\n                visible={isModalVisible.open}\n                onOk={handleOk} onCancel={handleCancel}>\n                <p style={{ sfontWeight: '600' }}>Sinopsis:</p>\n                <p>{isModalVisible.data.overview}</p>\n            </Modal>\n            <div>\n                {\n                    <div style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap' }}>\n                        {movies.map(({ poster_path, id, title, overview, vote_average }) => (\n                            <Tooltip title=\"Click for more info\" key={id}>\n                                <Image\n                                    preview={false}\n                                    width={200}\n                                    src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                                    onClick={() => showModal(title, overview, vote_average)}\n                                    style={styles.image}\n                                />\n                            </Tooltip>\n                        ))}\n                    </div>\n                }\n            </div>\n        </>\n    );\n};\n\n\nconst styles = {\n    title: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '0 1.2rem 0 0',\n    },\n\n    image: {\n        margin: '0.5rem',\n        borderRadius: '5px',\n        boxShadow: '2px 2px 10px 2px  rgba(0, 0, 0, 0.2)',\n    }\n\n}","import React from 'react';\r\n\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport queryString from \"query-string\";\r\n\r\nimport { actorInfoRequest } from '../../helpers/actorInfoRequest';\r\nimport { setActor } from '../../actions/actor';\r\n\r\nimport { MoviesInfo } from './MoviesInfo';\r\n\r\nimport { Divider, Button, Avatar, Tag, Space } from 'antd';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport { deleteActor } from '../../actions/actor';\r\n\r\n\r\nexport const ActorInfo = () => {\r\n  const location = useLocation();\r\n\r\n  let data = useSelector(state => state.actor);\r\n\r\n  if (!data.name) {\r\n    const { q } = queryString.parse(location.search);\r\n    data = actorInfo(q);\r\n  }\r\n\r\n  const { photo, name, gender, popularity, movies } = data;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleBack = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(deleteActor());\r\n    history.goBack();\r\n  }\r\n\r\n  async function actorInfo(name) {\r\n    const { data } = await actorInfoRequest(name);\r\n    dispatch(setActor(data));\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      {!data.name ?\r\n        <div style={{ fontSize: \"2em\", height: \"100vh\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n          Loading...\r\n        </div>\r\n        :\r\n        <div style={{ padding: \"10px\", overflow: \"hidden\" }}>\r\n          <Button type=\"danger\" style={{ marginBottom: \"10px\" }} onClick={handleBack}>\r\n            <ArrowLeftOutlined />Regresar\r\n          </Button>\r\n          <div>\r\n            <Space align=\"center\" direction=\"vertical\" style={{ width: \"100%\" }}>\r\n              {photo &&\r\n                <Avatar\r\n                  size={{ xs: 40, sm: 60, md: 80, lg: 100, xl: 120, xxl: 150 }}\r\n                  src={`https://image.tmdb.org/t/p/original${photo}`}\r\n                  style={styles.avatar}\r\n                />\r\n              }\r\n              <h2 style={{ color: '#fff' }}>{name}</h2>\r\n              <Tag color=\"gray\">\r\n                <p style={{ fontSize: '1.2em',color: '#fff', margin: '0' }}>{gender}</p>\r\n              </Tag>\r\n              <p style={{ color: '#fff' }}>Popularidad: {popularity}/100</p>\r\n            </Space>\r\n            <Divider type=\"vertical\" style={{ height: \"auto\" }} />\r\n            <MoviesInfo movies={movies} />\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    minHeight: '100vh',\r\n    background: 'rgba(0,0,0, 0.9)',\r\n  },\r\n\r\n  avatar: {\r\n    boxShadow: '2px 2px 10px 2px  rgba(0, 0, 0, 0.2)',\r\n  }\r\n} ","import React from 'react';\r\n\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setActor } from '../../actions/actor';\r\n\r\nimport { actorInfoRequest } from '../../helpers/actorInfoRequest';\r\n\r\nimport { Upload, message, Space } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nexport const UploadImage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const props = {\r\n    name: 'image',\r\n    multiple: false,\r\n    action: 'https://whois.nomada.cloud/upload',\r\n    accept: '.jpg,.png',\r\n\r\n    //manipular onChange\r\n    async onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      const fileType = (info.file.name).split('.').pop().toUpperCase();\r\n\r\n      if (fileType === 'PNG' || fileType === 'JPG') {\r\n        if (status === 'done') {\r\n          const { error, data } = await actorInfoRequest(info.file.originFileObj);\r\n          if (!error) {\r\n            dispatch(setActor(data));\r\n            history.push(`/actor-info?q=${data.name}`);\r\n          }\r\n        } else if (status === 'error') {\r\n          message.error(`${info.file.name} la carga del archivo falló.`);\r\n        }\r\n      } else if (status === 'done') {\r\n        message.error('Solo se permiten imágenes jpg o png.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <Space align=\"center\" direction=\"vertical\" style={{ width: \"100%\" }}>\r\n        <h2 style={{ color: '#fff' }}>¿Quién es ese actor?</h2>\r\n        <Dragger {...props} style={styles.dragger}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined style={{ color: 'red' }} />\r\n          </p>\r\n          <p className=\"ant-upload-text\" style={styles.text}>Haz click o arrastra una imagen</p>\r\n          <p className=\"ant-upload-hint\" style={styles.text}>\r\n            Selcciona la foto de un actor famoso para conocer quién es y en qué películas ha salido\r\n          </p>\r\n        </Dragger>\r\n      </Space>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst styles = {\r\n  container: {\r\n    minHeight: '100vh',\r\n    background: 'rgba(0,0,0, 0.9)',\r\n    color: '#fff',\r\n  },\r\n\r\n  dragger: {\r\n    padding: '10px',\r\n    background: 'rgba(255, 255, 255, 0.1)'\r\n  },\r\n\r\n  text: {\r\n    color: '#fff'\r\n  }\r\n}","import { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { ActorInfo } from \"../components/ActorInfo/ActorInfo\";\r\nimport { UploadImage } from \"../components/UploadImage/UploadImage\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <div>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/upload-image'\r\n              component={UploadImage}\r\n            />\r\n\r\n            <Route\r\n              path='/actor-info'\r\n              component={ActorInfo}\r\n            />\r\n\r\n            <Redirect to='/upload-image' />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { actorReducer } from '../reducers/actorReducer';\r\n\r\nconst reducers = combineReducers({\r\n  actor: actorReducer,\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n);","import { types } from '../types/types';\r\n\r\nexport const actorReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.setActor:\r\n            return {\r\n                ...action.payload\r\n            };\r\n\r\n        case types.deleteActor:\r\n            return {};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\n\nimport { AppRouter } from \"./routers/AppRouter\";\n\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}